#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk');
const existsSync = require('fs').existsSync;
const ora = require('ora');
const download = require('download-git-repo');
const { GITPATH, TEMPLATES } = require('../lib/config');

program
    .usage('<template-name> [project-name]')
    .description(`Run commands: ${chalk.green('yyeo-cli init')}, and ${chalk.green('<cmd>')} indicate required input, ${chalk.green('[cmd]')} indicate optional input.`);

program.on('--help', function () {
    console.log()
    console.log('Examples:')
    console.log(chalk.gray('  # Initialize a new project from the list of available templates in the current folder'))
    console.log(`  ${chalk.yellow('$')} ${chalk.green('yyeo-cli init react-admin-pro yourProName')}`)
    console.log()
    });

program.parse(process.argv);

const args = program.args;

if(args.length < 1) {
    return program.help();
} else {
    let flag = false;
    const templateNames = [];
    const template = args[0];
    const newProjectName = args[1] || template;
    // const branchName = args[2] ? `#${args[2]}` : '';
    TEMPLATES.map(item => {
        if (item.name === template){
            flag = true;
        }
        templateNames.push(item.name);
        return;
    });
    if (!flag) {
        console.log();
        console.error(chalk.red(`Error: Please enter the correct template name ${chalk.green('<')}${chalk.green(templateNames.join(' | '))}${chalk.green('>')}.`));
        console.log();
        return;
    }
    if (!existsSync(newProjectName)){
        const spinner = ora('Downloading the template project...');
        spinner.start();
        download(`${GITPATH}/${template}`, newProjectName, { clone: true }, function (err) {
            if (err) {
                console.log();
                console.error(chalk.red(`> Project init failed.`));
                console.error(chalk.red(`${err}`));
                spinner.fail();
                return;
            } else {
                spinner.succeed();
                console.log()
                console.log(`  ${chalk.green('Have already inited the project in current directory.')}`);
                console.log()
                console.log(`  Run project:`);
                console.log()
                console.log(`  ${chalk.yellow('$')} ${chalk.green(`cd ${newProjectName}`)}`);
                console.log(`  ${chalk.yellow('$')} ${chalk.green('yarn | npm install')}`);
                console.log(`  ${chalk.yellow('$')} ${chalk.green('yarn dev | npm run dev')}`);
                return;
            }
        });
    } else {
        console.log()
        console.error(`  ${chalk.red('The project')} <${chalk.yellow(newProjectName)}> ${chalk.red('already exists.')}, please run new command for an empty folder!`);
        process.exit(1);
    }
}

process.on('exit', function () {
    console.log()
})
